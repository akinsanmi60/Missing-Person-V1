{"version":3,"file":"static/js/997.f65b0f23.chunk.js","mappings":"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","sources":["common/Search/type.ts","common/Search/style.ts","common/Search/index.tsx","styles/layout.ts","../node_modules/@chakra-ui/select/dist/index.esm.js"],"sourcesContent":["import * as yup from \"yup\";\r\n\r\nexport type FormDataProp = {\r\n  firstName: string;\r\n  lastName: string;\r\n  age: string;\r\n  gender: string;\r\n  personSt: string;\r\n  personLga: string;\r\n};\r\n\r\ntype DataProp = {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  maidenName: string;\r\n  bloodGroup: string;\r\n  age: string;\r\n  gender: string;\r\n  email: string;\r\n  image: string;\r\n  address: {\r\n    address: string;\r\n    city: string;\r\n    postalcode: string;\r\n  };\r\n  birthDate: string;\r\n  height: number;\r\n  weight: number;\r\n  hair: {\r\n    color: string;\r\n    type: string;\r\n  };\r\n  eyeColor: string;\r\n};\r\n\r\nexport type SearchPprop = {\r\n  view: string;\r\n  people: DataProp[];\r\n  setData: React.Dispatch<React.SetStateAction<DataProp[]>>;\r\n};\r\n\r\nexport const schema = yup\r\n  .object({\r\n    firstName: yup.string().required(),\r\n    lastName: yup.string().required(),\r\n    age: yup.string().required(),\r\n    gender: yup.string().required(),\r\n    personSt: yup.string(),\r\n    personLga: yup.string(),\r\n  })\r\n  .required();\r\n\r\nexport const DataPropValue = {\r\n  id: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  maidenName: \"\",\r\n  bloodGroup: \"\",\r\n  age: \"\",\r\n  gender: \"\",\r\n  email: \"\",\r\n  image: \"\",\r\n  address: {\r\n    address: \"\",\r\n    city: \"\",\r\n    postalcode: \"\",\r\n  },\r\n  birthDate: \"\",\r\n  height: \"\",\r\n  weight: \"\",\r\n  hair: {\r\n    color: \"\",\r\n    type: \"\",\r\n  },\r\n  eyeColor: \"\",\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst SearchBox = styled.div`\r\n  h1 {\r\n    margin-bottom: 15px;\r\n    font-weight: 600;\r\n  }\r\n  .box {\r\n    box-shadow: 0 0.05em 0.05em 0 rgba(0, 0, 0, 0.25),\r\n      0 0.4em 1em 0 rgba(0, 0, 0, 0.15) !important;\r\n    padding: 2rem 2rem;\r\n  }\r\n  .boxA,\r\n  .boxB {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    /* justify-items: center; */\r\n    gap: 10px;\r\n    margin-bottom: 20px;\r\n    @media screen and (max-width: 425px) {\r\n      grid-template-columns: 1fr;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n  Input,\r\n  Select {\r\n    width: 100%;\r\n    height: 40px;\r\n    color: var(--neutral-light);\r\n    border: none;\r\n    border: 1px solid;\r\n    line-height: 1em;\r\n    font-weight: 300;\r\n    padding: 5px 15px;\r\n    outline: none;\r\n  }\r\n\r\n  Select option {\r\n    background-color: var(--dark-primary);\r\n  }\r\n\r\n  .btnbox {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 25px;\r\n  }\r\n\r\n  .text {\r\n    display: flex;\r\n    gap: 10px;\r\n    .icon {\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    .btnbox {\r\n      margin-top: 15px;\r\n    }\r\n    h1 {\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\nexport default SearchBox;\r\n\r\nexport const inputStyles = {\r\n  border: \"none\",\r\n  outline: \"none\",\r\n  focusBorderColor: \"none\",\r\n};\r\n\r\nexport const ButtonStyled = styled.button`\r\n  background-color: #0e2038;\r\n  padding: 0.7rem 2rem;\r\n  color: white;\r\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\r\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n  border-radius: 4px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  font-size: 0.9375rem;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  text-transform: uppercase;\r\n  min-width: 64px;\r\n  @media screen and (max-width: 425px) {\r\n    padding: 0.5rem 1rem;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Input, Select } from \"@chakra-ui/react\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormField from \"common/FormField\";\r\nimport { SearchPprop, schema, FormDataProp } from \"./type\";\r\nimport SearchBox, { ButtonStyled, inputStyles } from \"./style\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport dataNig from \"../../utils/states_and_lgas.json\";\r\n\r\nfunction SearchBar({ view, people, setData }: SearchPprop) {\r\n  const { register, handleSubmit, watch, reset } = useForm<FormDataProp>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  // the watch() is used to observe value change in state select\r\n  const formData = watch();\r\n\r\n  // LGA\r\n  const stateLGA = dataNig.find(s => s.state === formData.personSt);\r\n\r\n  // sort dataNig\r\n  const givenState = dataNig.sort((a, b) => (a.state > b.state ? 1 : -1));\r\n\r\n  // age calculation for dropdown\r\n  const getAge = people?.map(person => person.age);\r\n  const filterAge = getAge\r\n    ?.filter(function (age, index) {\r\n      return getAge.indexOf(age) === index;\r\n    })\r\n    .sort((a, b) => Number(a) - Number(b));\r\n\r\n  const submit = async (data: FormDataProp) => {\r\n    const lowerCaseFirstname = data?.firstName.toLowerCase();\r\n    const lowerCaseLastname = data?.lastName.toLowerCase();\r\n    const lowerCaseGender = data?.gender.toLowerCase();\r\n    const lowerCaseAge = data?.age.toLowerCase();\r\n\r\n    const fiteredPerson = people?.filter(person =>\r\n      Object.values(person)\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(\r\n          lowerCaseFirstname ||\r\n            lowerCaseLastname ||\r\n            lowerCaseGender ||\r\n            lowerCaseAge,\r\n        ),\r\n    );\r\n\r\n    setData(fiteredPerson);\r\n\r\n    reset();\r\n  };\r\n  return (\r\n    <SearchBox>\r\n      <form onSubmit={handleSubmit(submit)}>\r\n        <div className=\"box\">\r\n          <h1>Search for {view}</h1>\r\n          <div className=\"boxA\">\r\n            <div>\r\n              <FormField label=\"First Name\">\r\n                <Input sx={inputStyles} {...register(\"firstName\")} />\r\n              </FormField>\r\n            </div>\r\n            <div>\r\n              <FormField label=\"Last Name\">\r\n                <Input sx={inputStyles} {...register(\"lastName\")} />\r\n              </FormField>\r\n            </div>\r\n            <div>\r\n              <FormField label=\"Age\">\r\n                <Select placeholder=\"Please Select\" {...register(\"age\")}>\r\n                  {filterAge?.map(yearAge => (\r\n                    <option value={yearAge} key={yearAge}>\r\n                      {yearAge}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </FormField>\r\n            </div>\r\n          </div>\r\n          <div className=\"boxB\">\r\n            <div>\r\n              <FormField label=\"Gender\">\r\n                <Input sx={inputStyles} {...register(\"gender\")} />\r\n              </FormField>\r\n            </div>\r\n            <div>\r\n              <FormField label=\"State\">\r\n                <Select placeholder=\"Select State\" {...register(\"personSt\")}>\r\n                  {givenState\r\n                    .map(({ state }) => (\r\n                      <option value={state} key={state}>\r\n                        {state}\r\n                      </option>\r\n                    ))\r\n                    .sort()}\r\n                </Select>\r\n              </FormField>\r\n            </div>\r\n            <div>\r\n              <FormField label=\"LGA\">\r\n                <Select\r\n                  placeholder=\"Local govt area\"\r\n                  {...register(\"personLga\", { required: true })}\r\n                  disabled={!stateLGA}\r\n                >\r\n                  {stateLGA &&\r\n                    stateLGA.lgas\r\n                      .sort((a, b) => (a > b ? 1 : -1))\r\n                      .map(lga => (\r\n                        <option\r\n                          value={lga.toLowerCase()}\r\n                          key={lga.toLowerCase()}\r\n                        >\r\n                          {lga}\r\n                        </option>\r\n                      ))}\r\n                </Select>\r\n              </FormField>\r\n            </div>\r\n          </div>\r\n          <div className=\"btnbox\">\r\n            <ButtonStyled>\r\n              <p className=\"text\">\r\n                <FaSearch className=\"icon\" /> Search\r\n              </p>\r\n            </ButtonStyled>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </SearchBox>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nconst OuterLayout = styled.section`\r\n  padding: 2rem 4rem;\r\n  @media screen and (min-width: 1186px) {\r\n    padding: 2rem 6rem;\r\n  }\r\n  @media screen and (max-width: 990px) {\r\n    padding: 1rem 2rem;\r\n  }\r\n`;\r\nexport default OuterLayout;\r\nexport const InnerLayout = styled.section`\r\n  padding: 2rem 0;\r\n`;\r\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\n\n// src/select-field.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nvar SelectField = forwardRef(function SelectField2(props, ref) {\n  const { children, placeholder, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.select, {\n    ...rest,\n    ref,\n    className: cx(\"chakra-select\", className)\n  }, placeholder && /* @__PURE__ */ React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\nSelectField.displayName = \"SelectField\";\n\n// src/select.tsx\nvar Select = forwardRef2((props, ref) => {\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...styles.field[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles,\n    ...layoutProps,\n    ...rootProps\n  }, /* @__PURE__ */ React.createElement(SelectField, {\n    ref,\n    height: h ?? height,\n    minH: minH ?? minHeight,\n    placeholder,\n    ...ownProps,\n    __css: fieldStyles\n  }, props.children), /* @__PURE__ */ React.createElement(SelectIcon, {\n    \"data-disabled\": dataAttr(ownProps.disabled),\n    ...(iconColor || color) && { color: iconColor || color },\n    __css: styles.icon,\n    ...iconSize && { fontSize: iconSize }\n  }, icon));\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ React.createElement(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}));\nvar IconWrapper = chakra2(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ React.createElement(DefaultIcon, null), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ React.createElement(IconWrapper, {\n    ...rest,\n    className: \"chakra-select__icon-wrapper\"\n  }, isValidElement(children) ? clone : null);\n};\nSelectIcon.displayName = \"SelectIcon\";\nexport {\n  DefaultIcon,\n  Select,\n  SelectField\n};\n"],"names":["schema","yup","firstName","required","lastName","age","gender","personSt","personLga","styled","inputStyles","border","outline","focusBorderColor","ButtonStyled","view","people","setData","useForm","resolver","yupResolver","register","handleSubmit","watch","reset","formData","stateLGA","dataNig","s","state","givenState","a","b","getAge","map","person","filterAge","filter","index","indexOf","sort","Number","submit","data","lowerCaseFirstname","toLowerCase","lowerCaseLastname","lowerCaseGender","lowerCaseAge","fiteredPerson","Object","values","toString","includes","onSubmit","className","FormField","label","sx","placeholder","yearAge","value","disabled","lgas","lga","OuterLayout","cx","classNames","Boolean","join","SelectField","forwardRef","props","ref","children","rest","React","chakra","displayName","Select","forwardRef2","condition","styles","useMultiStyleConfig","omitThemingProps","rootProps","icon","color","height","h","minH","minHeight","iconColor","iconSize","object","keys","picked","omitted","entries","key","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","width","position","fieldStyles","paddingEnd","field","_focus","zIndex","chakra2","__css","SelectIcon","fontSize","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","clone","cloneElement","role","focusable","style","isValidElement"],"sourceRoot":""}