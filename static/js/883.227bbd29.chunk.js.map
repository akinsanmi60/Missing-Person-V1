{"version":3,"file":"static/js/883.227bbd29.chunk.js","mappings":"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","sources":["pages/addMissing/style.ts","common/AddForm/component/index.tsx","pages/addMissing/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst MissingWrapper = styled.div`\r\n  .head {\r\n    padding: 8px;\r\n    box-shadow: 0 0.05em 0.05em 0 rgba(0, 0, 0, 0.25),\r\n      0 0.4em 1em 0 rgba(0, 0, 0, 0.15) !important;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    .head {\r\n      h1 {\r\n        font-size: 16px;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default MissingWrapper;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Input,\r\n  Modal,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/react\";\r\nimport PaystackPop from \"@paystack/inline-js\";\r\nimport FormField from \"common/FormField\";\r\nimport { ModalWrapper } from \"../style\";\r\nimport toastOptions from \"hooks/toast\";\r\nimport { toast } from \"react-toastify\";\r\nimport AuthContext from \"contexts/AuthProvider\";\r\nimport { PropTran } from \"../type\";\r\n\r\ntype ChangeProps = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\nfunction PaymentModal({ isOpen, onClose }: ChangeProps) {\r\n  const { authUser } = useContext(AuthContext);\r\n  const amount = \"20000\";\r\n\r\n  const lastName = authUser?.user.lastName || \"\";\r\n  const firstName = authUser?.user.firstName || \"\";\r\n  const email = authUser?.user.email || \"\";\r\n\r\n  const submitForm = (e: { preventDefault: () => void }) => {\r\n    e.preventDefault();\r\n    const paystack = new PaystackPop();\r\n    paystack.newTransaction({\r\n      key: \"pk_test_fa5805e84c03c63dbe51460e8b6add4fca372aa6\",\r\n      amount: (amount as any) * 100,\r\n      lastName,\r\n      firstName,\r\n      email,\r\n      onSuccess(transaction: PropTran) {\r\n        localStorage.setItem(\"transaction\", JSON.stringify(transaction));\r\n        toast.success(\r\n          `Transaction Successful Ref ${transaction.reference}`,\r\n          toastOptions,\r\n        );\r\n      },\r\n      onCancel() {\r\n        toast.error(\"Transaction Cancel\", toastOptions);\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isCentered\r\n      onClose={onClose}\r\n      isOpen={isOpen}\r\n      size=\"md\"\r\n      motionPreset=\"slideInBottom\"\r\n    >\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <ModalBody>\r\n          <ModalWrapper>\r\n            <h1 style={{ marginBottom: 10 }}>Make Payment</h1>\r\n            <form onSubmit={submitForm}>\r\n              <div>\r\n                <FormField label=\"First Name\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={firstName}\r\n                    readOnly\r\n                    outline=\"none\"\r\n                  />\r\n                </FormField>\r\n              </div>\r\n              <div className=\"inputbox\">\r\n                <FormField label=\"Last Name\">\r\n                  <Input type=\"text\" value={lastName} readOnly outline=\"none\" />\r\n                </FormField>\r\n              </div>\r\n              <div className=\"inputbox\">\r\n                <FormField label=\"Email\">\r\n                  <Input type=\"text\" value={email} outline=\"none\" readOnly />\r\n                </FormField>\r\n              </div>\r\n              <div className=\"inputbox\">\r\n                <FormField label=\"Amount\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    required\r\n                    value={amount}\r\n                    outline=\"none\"\r\n                    readOnly\r\n                  />\r\n                </FormField>\r\n              </div>\r\n\r\n              <div className=\"btn\">\r\n                <button type=\"submit\" className=\"reset_btn\">\r\n                  Pay\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </ModalWrapper>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddFormPage from \"common/AddForm\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport toastOptions from \"hooks/toast\";\r\nimport { postRequest } from \"utils/apiCall\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport MissingWrapper from \"./style\";\r\nimport { FasProp } from \"./type\";\r\nimport { ADDMISSINGPERSON_ROUTE } from \"utils/Api-Routes\";\r\nimport PaymentModal from \"common/AddForm/component\";\r\n\r\nfunction AddMissingPage() {\r\n  const formType = \"missing\";\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { register, handleSubmit, watch, reset, setValue } = useForm<FasProp>();\r\n  const [images, setImages] = useState<File[]>([]);\r\n  const [ImageURLs, setImageURLs] = useState<string[]>([]);\r\n\r\n  // the watch() is used to observe value change in state select\r\n  const formData = watch();\r\n\r\n  useEffect(() => {\r\n    if (images.length < 1) return;\r\n    const newImageUrls: string[] = [];\r\n    images.forEach(image => newImageUrls.push(URL.createObjectURL(image)));\r\n    setImageURLs(newImageUrls);\r\n  }, [images]);\r\n\r\n  function onImageChange(e: { target: { files: any } }) {\r\n    setImages([...e.target.files]);\r\n  }\r\n\r\n  const { mutate, isLoading } = useMutation(postRequest, {\r\n    onSuccess(res) {\r\n      toast.success(res?.message, toastOptions);\r\n    },\r\n    onError(err: any) {\r\n      toast.error(err?.message, toastOptions);\r\n    },\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<FasProp> = data => {\r\n    console.log(data);\r\n    const imgData = new FormData();\r\n    if (images.length > 3) return;\r\n    Array.from(images).forEach(item => {\r\n      imgData.append(\"products\", item);\r\n    });\r\n    mutate({ data: data, url: ADDMISSINGPERSON_ROUTE });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <MissingWrapper>\r\n      <div className=\"head\">\r\n        <h1>Please Add Missing Person Details</h1>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <AddFormPage\r\n          formType={formType}\r\n          formData={formData}\r\n          register={register}\r\n          setValue={setValue}\r\n          isLoading={isLoading}\r\n          onOpen={onOpen}\r\n          onImageChange={onImageChange}\r\n          ImageURLs={ImageURLs}\r\n        />\r\n      </form>\r\n      <PaymentModal onClose={onClose} isOpen={isOpen} />\r\n    </MissingWrapper>\r\n  );\r\n}\r\n\r\nexport default AddMissingPage;\r\n"],"names":["styled","isOpen","onClose","authUser","useContext","AuthContext","amount","lastName","user","firstName","email","isCentered","size","motionPreset","style","marginBottom","onSubmit","e","preventDefault","PaystackPop","newTransaction","key","onSuccess","transaction","localStorage","setItem","JSON","stringify","toast","reference","toastOptions","onCancel","FormField","label","type","value","readOnly","outline","className","required","useDisclosure","onOpen","useForm","register","handleSubmit","watch","reset","setValue","useState","images","setImages","ImageURLs","setImageURLs","formData","useEffect","length","newImageUrls","forEach","image","push","URL","createObjectURL","useMutation","postRequest","res","message","onError","err","mutate","isLoading","data","console","log","imgData","FormData","Array","from","item","append","url","ADDMISSINGPERSON_ROUTE","AddForm","formType","onImageChange","target","files"],"sourceRoot":""}