{"version":3,"file":"static/js/72.fb1a8d8c.chunk.js","mappings":"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","sources":["pages/tipForm/style.ts","pages/tipForm/type.ts","pages/tipForm/index.tsx","../node_modules/@chakra-ui/select/dist/index.esm.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst TipWrapper = styled.div`\r\n  padding: 0.5rem 4rem;\r\n  color: \"#0E2038\";\r\n\r\n  .container {\r\n    padding: 20px 90px;\r\n    margin-top: 5px;\r\n    border: 1px solid var(--dark-primary);\r\n    margin-bottom: 50px;\r\n    background-color: var(--neutral-light);\r\n  }\r\n\r\n  h1 {\r\n    text-align: center;\r\n    margin-bottom: 9px;\r\n    font-weight: 900;\r\n    color: \"#0E2038\";\r\n  }\r\n\r\n  Text {\r\n    font-size: 13px;\r\n  }\r\n\r\n  .boxA {\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid var(--dark-primary);\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  label {\r\n    font-size: 15px;\r\n    margin-bottom: 1px;\r\n  }\r\n\r\n  Input,\r\n  Select {\r\n    border: 1px solid var(--dark-primary);\r\n    font-size: 13px;\r\n    color: var(--dark-primary);\r\n    &:hover {\r\n      border: 1px solid var(--dark-primary);\r\n    }\r\n  }\r\n  Select option {\r\n    padding: 0px 5px;\r\n    background-color: var(--neutral-light);\r\n  }\r\n\r\n  .bio,\r\n  .polbox {\r\n    display: grid;\r\n    gap: 20px;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n  }\r\n  .fullname,\r\n  .mediacontact {\r\n    display: grid;\r\n    gap: 20px;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  .bio,\r\n  .polbox,\r\n  .fullname,\r\n  .mediacontact,\r\n  .address-A {\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  .feedbtn {\r\n    display: flex;\r\n    justify-content: center;\r\n    span {\r\n      margin-left: 9px;\r\n      margin-top: 16px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1186px) {\r\n    padding: 0.5rem 8rem;\r\n  }\r\n  @media screen and (max-width: 990px) {\r\n    padding: 0.5rem 1rem;\r\n  }\r\n  @media screen and (max-width: 425px) {\r\n    .container {\r\n      padding: 20px;\r\n    }\r\n\r\n    h1 {\r\n      margin-bottom: 0px;\r\n    }\r\n\r\n    .boxA {\r\n      margin-bottom: 0px;\r\n    }\r\n\r\n    label {\r\n      margin-top: 19px;\r\n    }\r\n\r\n    .bio,\r\n    .polbox,\r\n    .fullname,\r\n    .mediacontact,\r\n    .address-A {\r\n      gap: 0px;\r\n      grid-template-columns: 1fr;\r\n      margin-bottom: 0px;\r\n    }\r\n  }\r\n`;\r\nexport default TipWrapper;\r\n\r\nexport const TextArea = styled.textarea`\r\n  border: 1px solid;\r\n  width: 100%;\r\n  height: 150px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  background-color: var(--neutral-light);\r\n  font-size: 16px;\r\n  resize: none;\r\n`;\r\n\r\nexport const ButtonStyled = styled.button`\r\n  background-color: var(--dark-primary);\r\n  padding: 0.4rem 2rem;\r\n  color: white;\r\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\r\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\r\n  border-radius: 4px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  text-transform: uppercase;\r\n  min-width: 64px;\r\n  @media screen and (max-width: 425px) {\r\n    margin-top: 5px;\r\n    padding: 0.3rem 0rem;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","// skin-type sorting\r\nexport const gender = [\"Female\", \"Male\"];\r\n// skin-type sorting\r\nexport const empoly = [\r\n  \"Student\",\r\n  \"Artisan\",\r\n  \"Trader\",\r\n  \"Teacher\",\r\n  \"Money Agent\",\r\n].sort((a, b) => (a > b ? 1 : -1));\r\nexport const foundInputValue = [\"Found Dead Body\", \"Found Missing Person\"];\r\n\r\nexport type TipProps = {\r\n  lastName: string;\r\n  firstName: string;\r\n  address: string;\r\n  state: string;\r\n  employment: string;\r\n  age: string;\r\n  gender: string;\r\n  lga: string;\r\n  phoneNumber: string;\r\n  email: string;\r\n  tipDate: string;\r\n  tipTime: string;\r\n  tipType: string;\r\n  policeAdd: string;\r\n  policeState: string;\r\n  policeLga: string;\r\n  policeStation: string;\r\n  tipContent: string;\r\n};\r\n\r\nexport const availableNews = {\r\n  news1: \"You must be above 15years of age before you can fill this form.\",\r\n  news2:\r\n    \"Your filled personal details wont be shared with anyone which in turn will lead to voilent act against you.\",\r\n  new3: `Before reporting any information, kindly get information of police station nearby you. So that the information you reported can be passed to the police station you filled out.`,\r\n  new4: `Kindly avoid long tip details. Make it very concise and clear.`,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport FormField from \"common/FormField\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport dataNig from \"../../utils/states_and_lgas.json\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport TipWrapper, { ButtonStyled, TextArea } from \"./style\";\r\nimport {\r\n  availableNews,\r\n  empoly,\r\n  foundInputValue,\r\n  gender,\r\n  TipProps,\r\n} from \"./type\";\r\nimport { toast } from \"react-toastify\";\r\nimport toastOptions from \"hooks/toast\";\r\nimport { postRequest } from \"utils/apiCall\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { TIP_ROUTE } from \"utils/Api-Routes\";\r\nimport NewsIndex from \"common/NewsIndex\";\r\n\r\nfunction TipFormPage() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { register, handleSubmit, watch, reset } = useForm<TipProps>();\r\n  const formData = watch();\r\n\r\n  useEffect(() => {\r\n    onOpen();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // LGA\r\n  const stateLGA = dataNig.find(\r\n    select => select.state === formData.state || formData.policeState,\r\n  );\r\n\r\n  // sort dataNig\r\n  const givenState = dataNig.sort((a, b) => (a.state > b.state ? 1 : -1));\r\n\r\n  const { mutate, isLoading } = useMutation(postRequest, {\r\n    onSuccess(res) {\r\n      toast.success(res?.message, toastOptions);\r\n      console.log(res);\r\n    },\r\n    onError(err: any) {\r\n      toast.error(err?.message, toastOptions);\r\n    },\r\n  });\r\n\r\n  const submit = (inputValue: TipProps) => {\r\n    mutate({ data: inputValue, url: TIP_ROUTE });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <TipWrapper>\r\n      <NewsIndex availableNews={availableNews} />\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit(submit)}>\r\n          <div className=\"boxA\">\r\n            <h1>Informant's Details</h1>\r\n            <div className=\"fullname\">\r\n              <div>\r\n                <FormField label=\"First Name\">\r\n                  <Input type=\"text\" {...register(\"firstName\")} />\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Last Name\">\r\n                  <Input type=\"text\" {...register(\"lastName\")} />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"bio\">\r\n              <div>\r\n                <FormField label=\"Gender\">\r\n                  <Select placeholder=\"Please Select\" {...register(\"gender\")}>\r\n                    {gender.map(item => (\r\n                      <option value={item} key={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n\r\n              <div>\r\n                <FormField label=\"Age\">\r\n                  <Input type=\"text\" {...register(\"age\")} min=\"15\" max=\"60\" />\r\n                </FormField>\r\n              </div>\r\n\r\n              <div>\r\n                <FormField label=\"Employment\">\r\n                  <Select\r\n                    placeholder=\"Please Select\"\r\n                    {...register(\"employment\")}\r\n                  >\r\n                    {empoly.map(item => (\r\n                      <option value={item} key={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"mediacontact\">\r\n              <div>\r\n                <FormField label=\"Email\">\r\n                  <Input type=\"text\" {...register(\"email\")} />\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Contact Number\">\r\n                  <Input\r\n                    type=\"text\"\r\n                    {...register(\"phoneNumber\")}\r\n                    placeholder=\"08166998877\"\r\n                  />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"address-A\">\r\n              <div>\r\n                <FormField label=\"Address\">\r\n                  <Input type=\"text\" {...register(\"address\")} />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"mediacontact\">\r\n              <div>\r\n                <FormField label=\"State\">\r\n                  <Select placeholder=\"Select State\" {...register(\"state\")}>\r\n                    {givenState.map(({ state }) => (\r\n                      <option value={state} key={state}>\r\n                        {state}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Local Government\">\r\n                  <Select\r\n                    placeholder=\"Local govt area\"\r\n                    {...register(\"lga\", { required: true })}\r\n                    disabled={!stateLGA}\r\n                  >\r\n                    {stateLGA &&\r\n                      stateLGA.lgas\r\n                        .sort((a, b) => (a > b ? 1 : -1))\r\n                        .map(lga => (\r\n                          <option\r\n                            value={lga.toLowerCase()}\r\n                            key={lga.toLowerCase()}\r\n                          >\r\n                            {lga}\r\n                          </option>\r\n                        ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"boxB\">\r\n            <h1>Information Details</h1>\r\n            <div className=\"polbox\">\r\n              <div className=\"person_type\">\r\n                <FormField label=\"Found Person Type\">\r\n                  <Select\r\n                    placeholder=\"Please Select\"\r\n                    {...register(\"tipType\", { required: true })}\r\n                  >\r\n                    {foundInputValue.map(inputValue => (\r\n                      <option value={inputValue} key={inputValue}>\r\n                        {inputValue}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Tip Date\">\r\n                  <Input type=\"date\" {...register(\"tipDate\")} />\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Tip Time\">\r\n                  <Input type=\"time\" {...register(\"tipTime\")} />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"address-A\">\r\n              <div>\r\n                <FormField label=\"Nearby Police-Station Name\">\r\n                  <Input type=\"text\" {...register(\"policeStation\")} />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"address-A\">\r\n              <div>\r\n                <FormField label=\"Address\">\r\n                  <Input type=\"text\" {...register(\"policeAdd\")} />\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"mediacontact\">\r\n              <div>\r\n                <FormField label=\"State\">\r\n                  <Select\r\n                    placeholder=\"Select State\"\r\n                    {...register(\"policeState\")}\r\n                  >\r\n                    {givenState.map(({ state }) => (\r\n                      <option value={state} key={state}>\r\n                        {state}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n              <div>\r\n                <FormField label=\"Local Government\">\r\n                  <Select\r\n                    placeholder=\"Local govt area\"\r\n                    {...register(\"policeLga\", { required: true })}\r\n                    disabled={!stateLGA}\r\n                  >\r\n                    {stateLGA &&\r\n                      stateLGA.lgas\r\n                        .sort((a, b) => (a > b ? 1 : -1))\r\n                        .map(lga => (\r\n                          <option\r\n                            value={lga.toLowerCase()}\r\n                            key={lga.toLowerCase()}\r\n                          >\r\n                            {lga}\r\n                          </option>\r\n                        ))}\r\n                  </Select>\r\n                </FormField>\r\n              </div>\r\n            </div>\r\n            <div className=\"area\">\r\n              <FormField label=\"Tip Details\">\r\n                <TextArea {...register(\"tipContent\")} maxLength={1000} />\r\n              </FormField>\r\n            </div>\r\n            <div className=\"feedbtn\">\r\n              <ButtonStyled type=\"submit\">\r\n                {isLoading ? \"Sending...\" : \"Send\"}\r\n              </ButtonStyled>\r\n              <span>{isLoading ? <Spinner size=\"sm\" /> : null}</span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <>\r\n        <Modal\r\n          blockScrollOnMount={false}\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          isCentered\r\n        >\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader textAlign=\"center\" mb={-5} color=\"#0E2038\">\r\n              Rules of Engagment\r\n            </ModalHeader>\r\n            <ModalCloseButton outline=\"none\" />\r\n            <ModalBody>\r\n              {Object.values(availableNews).map((item, i) => (\r\n                <div key={i.toString()}>\r\n                  <Text\r\n                    fontSize=\"md\"\r\n                    mt={3}\r\n                    color=\"#0E2038\"\r\n                    textAlign=\"justify\"\r\n                  >\r\n                    👉{item}\r\n                  </Text>\r\n                </div>\r\n              ))}\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n    </TipWrapper>\r\n  );\r\n}\r\n\r\nexport default TipFormPage;\r\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\n\n// src/select-field.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nvar SelectField = forwardRef(function SelectField2(props, ref) {\n  const { children, placeholder, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.select, {\n    ...rest,\n    ref,\n    className: cx(\"chakra-select\", className)\n  }, placeholder && /* @__PURE__ */ React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\nSelectField.displayName = \"SelectField\";\n\n// src/select.tsx\nvar Select = forwardRef2((props, ref) => {\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...styles.field[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles,\n    ...layoutProps,\n    ...rootProps\n  }, /* @__PURE__ */ React.createElement(SelectField, {\n    ref,\n    height: h ?? height,\n    minH: minH ?? minHeight,\n    placeholder,\n    ...ownProps,\n    __css: fieldStyles\n  }, props.children), /* @__PURE__ */ React.createElement(SelectIcon, {\n    \"data-disabled\": dataAttr(ownProps.disabled),\n    ...(iconColor || color) && { color: iconColor || color },\n    __css: styles.icon,\n    ...iconSize && { fontSize: iconSize }\n  }, icon));\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ React.createElement(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}));\nvar IconWrapper = chakra2(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ React.createElement(DefaultIcon, null), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ React.createElement(IconWrapper, {\n    ...rest,\n    className: \"chakra-select__icon-wrapper\"\n  }, isValidElement(children) ? clone : null);\n};\nSelectIcon.displayName = \"SelectIcon\";\nexport {\n  DefaultIcon,\n  Select,\n  SelectField\n};\n"],"names":["styled","TextArea","ButtonStyled","gender","empoly","sort","a","b","foundInputValue","availableNews","news1","news2","new3","new4","useDisclosure","isOpen","onOpen","onClose","useForm","register","handleSubmit","watch","reset","formData","useEffect","stateLGA","dataNig","select","state","policeState","givenState","useMutation","postRequest","onSuccess","res","toast","message","toastOptions","console","log","onError","err","mutate","isLoading","NewsIndex","className","onSubmit","inputValue","data","url","TIP_ROUTE","FormField","label","type","placeholder","map","item","value","min","max","required","disabled","lgas","lga","toLowerCase","maxLength","size","blockScrollOnMount","isCentered","textAlign","mb","color","outline","Object","values","i","fontSize","mt","toString","cx","classNames","filter","Boolean","join","SelectField","forwardRef","props","ref","children","rest","React","chakra","displayName","Select","forwardRef2","condition","styles","useMultiStyleConfig","omitThemingProps","rootProps","icon","height","h","minH","minHeight","iconColor","iconSize","object","keys","picked","omitted","entries","key","includes","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","width","position","fieldStyles","paddingEnd","field","_focus","zIndex","chakra2","__css","SelectIcon","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","clone","cloneElement","role","focusable","style","isValidElement"],"sourceRoot":""}