{"version":3,"file":"static/js/602.f0f95994.chunk.js","mappings":"oUA6DA,E,QA3DuBA,GAAAA,IAAH,qlC,mBC0BdC,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAAaE,WACpBC,KAAMH,EAAAA,KAAaE,WACnBE,YAAaJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIJ,aAE1CA,WA8EH,MA5EA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAmCC,EAAAA,EAAAA,IAAyB,CAC1DC,UAAUC,EAAAA,EAAAA,GAAYf,KADhBgB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAQlB,GAA8BC,EAAAA,EAAAA,aAAYC,EAAAA,GAAa,CACrDC,UADqD,SAC3CC,GACRC,EAAAA,GAAAA,QAAA,OAAcD,QAAd,IAAcA,OAAd,EAAcA,EAAKE,QAASC,EAAAA,GAC5BhB,EAAS,gBACV,EACDiB,QALqD,SAK7CC,GACNJ,EAAAA,GAAAA,MAAA,OAAYI,QAAZ,IAAYA,OAAZ,EAAYA,EAAKH,QAASC,EAAAA,EAC3B,IAPKG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAehB,OACE,SAAC,EAAD,WACE,gBAAKC,UAAU,UAAf,UACE,kBAAMC,SAAUb,GARL,SAACc,GAChBC,QAAQC,IAAI,eAAgBF,GAC5BJ,EAAO,CAAEO,KAAMH,EAAYI,IAAKC,EAAAA,IACjC,IAKK,WACE,iBAAKP,UAAU,WAAf,WACE,eAAIA,UAAU,QAAd,UACE,SAAC,KAAD,CAAMQ,GAAG,IAAT,uBAEF,eAAIR,UAAU,OAAd,qCAEF,gBAAKA,UAAU,OAAf,UACE,SAACS,EAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,SAAC,MAAD,kBAAWvB,EAAS,UAApB,IAA8BwB,KAAK,QAAQrC,UAAQ,UAGvD,gBAAK0B,UAAU,OAAf,UACE,SAACS,EAAA,EAAD,CAAWC,MAAM,OAAjB,UACE,SAAC,MAAD,kBAAWvB,EAAS,SAApB,IAA6BwB,KAAK,OAAOrC,UAAQ,UAGrD,gBAAK0B,UAAU,OAAf,UACE,SAACS,EAAA,EAAD,CAAWC,MAAM,eAAjB,UACE,UAAC,KAAD,YACE,SAAC,MAAD,kBACMvB,EAAS,gBADf,IAEEwB,KAAM7B,EAAQ,OAAS,eAEzB,SAAC,KAAD,WACE,cAAGkB,UAAU,WAAWY,QA9CnB,kBAAM7B,GAAUD,EAAhB,EA8CL,SACGA,GACC,SAAC,KAAD,CAAU+B,MAAM,cAEhB,SAAC,KAAD,CAAaA,MAAM,yBAO/B,gBAAKb,UAAU,MAAf,UACE,mBAAQW,KAAK,SAASX,UAAU,YAAhC,SACGD,GAAY,SAAC,IAAD,CAASe,KAAK,OAAU,iBAOlD,C","sources":["pages/resetPassword/style.ts","pages/resetPassword/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst ResetContainer = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--dark-primary);\r\n  .formbox {\r\n    .titlebox {\r\n      margin-bottom: 14px;\r\n    }\r\n    .title,\r\n    .hero {\r\n      text-align: center;\r\n      font-size: 22px;\r\n      font-weight: 900;\r\n    }\r\n\r\n    .hero {\r\n      font-size: 22px;\r\n    }\r\n\r\n    .form {\r\n      margin-bottom: 13px;\r\n      label {\r\n        margin-bottom: 2px;\r\n      }\r\n    }\r\n\r\n    Input {\r\n      outline: none;\r\n      padding: 10px;\r\n      border-radius: 6px;\r\n      font-size: 14px;\r\n      border: 1px solid var(--dark-primary);\r\n      color: var(--dark-primary);\r\n      &:hover {\r\n        border: 1px solid var(--dark-primary);\r\n      }\r\n    }\r\n\r\n    .btn {\r\n      margin-top: 20px;\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n\r\n    .reset_btn {\r\n      outline: none;\r\n      padding: 8px 0;\r\n      background-color: var(--dark-primary);\r\n      color: white;\r\n      border-radius: 5px;\r\n      width: 100px;\r\n      font-weight: bold;\r\n      font-size: 14px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\nexport default ResetContainer;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  Spinner,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n} from \"@chakra-ui/react\";\r\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\nimport toastOptions from \"hooks/toast\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { postRequest } from \"utils/apiCall\";\r\nimport { RESET_PASSWORD } from \"utils/Api-Routes\";\r\n\r\nimport ResetContainer from \"./style\";\r\nimport FormField from \"common/FormField\";\r\n\r\ninterface LoginFormInputs {\r\n  email: string;\r\n  code: string;\r\n  newPassword: string;\r\n}\r\n\r\nconst schema = yup\r\n  .object({\r\n    email: yup.string().required(),\r\n    code: yup.string().required(),\r\n    newPassword: yup.string().min(5).max(20).required(),\r\n  })\r\n  .required();\r\n\r\nfunction ResetFormPage() {\r\n  const navigate = useNavigate();\r\n  const [pshow, setPshow] = useState(false);\r\n  const { register, handleSubmit } = useForm<LoginFormInputs>({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  // to view password\r\n  const handleClickP = () => setPshow(!pshow);\r\n\r\n  // handle reset function\r\n  const { mutate, isLoading } = useMutation(postRequest, {\r\n    onSuccess(res) {\r\n      toast.success(res?.message, toastOptions);\r\n      navigate(\"/studentlogin\");\r\n    },\r\n    onError(err: any) {\r\n      toast.error(err?.message, toastOptions);\r\n    },\r\n  });\r\n\r\n  const onSubmit = (valueInput: any) => {\r\n    console.log(\"<<<+++++>>>>\", valueInput);\r\n    mutate({ data: valueInput, url: RESET_PASSWORD });\r\n  };\r\n\r\n  return (\r\n    <ResetContainer>\r\n      <div className=\"formbox\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"titlebox\">\r\n            <h1 className=\"title\">\r\n              <Link to=\"/\">People</Link>\r\n            </h1>\r\n            <h2 className=\"hero\">Reset Your Password</h2>\r\n          </div>\r\n          <div className=\"form\">\r\n            <FormField label=\"Email\">\r\n              <Input {...register(\"email\")} type=\"email\" required />\r\n            </FormField>\r\n          </div>\r\n          <div className=\"form\">\r\n            <FormField label=\"Code\">\r\n              <Input {...register(\"code\")} type=\"text\" required />\r\n            </FormField>\r\n          </div>\r\n          <div className=\"form\">\r\n            <FormField label=\"New Password\">\r\n              <InputGroup>\r\n                <Input\r\n                  {...register(\"newPassword\")}\r\n                  type={pshow ? \"text\" : \"password\"}\r\n                />\r\n                <InputRightElement>\r\n                  <p className=\"btn-icon\" onClick={handleClickP}>\r\n                    {pshow ? (\r\n                      <ViewIcon color=\" #16194F\" />\r\n                    ) : (\r\n                      <ViewOffIcon color=\" #16194F\" />\r\n                    )}\r\n                  </p>\r\n                </InputRightElement>\r\n              </InputGroup>\r\n            </FormField>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <button type=\"submit\" className=\"reset_btn\">\r\n              {isLoading ? <Spinner size=\"sm\" /> : \"Send\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </ResetContainer>\r\n  );\r\n}\r\n\r\nexport default ResetFormPage;\r\n"],"names":["styled","schema","yup","email","required","code","newPassword","min","max","navigate","useNavigate","useState","pshow","setPshow","useForm","resolver","yupResolver","register","handleSubmit","useMutation","postRequest","onSuccess","res","toast","message","toastOptions","onError","err","mutate","isLoading","className","onSubmit","valueInput","console","log","data","url","RESET_PASSWORD","to","FormField","label","type","onClick","color","size"],"sourceRoot":""}