{"version":3,"file":"static/js/321.7dbf16ef.chunk.js","mappings":"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","sources":["pages/addFound/style.ts","pages/addFound/index.tsx","../node_modules/@chakra-ui/select/dist/index.esm.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst FoundWrapper = styled.div`\r\n  .head {\r\n    padding: 8px;\r\n    box-shadow: 0 0.05em 0.05em 0 rgba(0, 0, 0, 0.25),\r\n      0 0.4em 1em 0 rgba(0, 0, 0, 0.15) !important;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    .head {\r\n      h1 {\r\n        font-size: 16px;\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default FoundWrapper;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AddFormPage from \"common/AddForm\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport { postRequest } from \"utils/apiCall\";\r\nimport { ADDDEADPERSON_ROUTE, ADDFOUNDPERSON_ROUTE } from \"utils/Api-Routes\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport toastOptions from \"hooks/toast\";\r\nimport { toast } from \"react-toastify\";\r\nimport FoundWrapper from \"./style\";\r\nimport { FasProp } from \"./type\";\r\n\r\nfunction AddFoundPage() {\r\n  const formType = \"found\";\r\n  const { onOpen } = useDisclosure();\r\n  const { register, handleSubmit, watch, reset, setValue } = useForm<FasProp>();\r\n  const [images, setImages] = useState<File[]>([]);\r\n  const [ImageURLs, setImageURLs] = useState<string[]>([]);\r\n\r\n  // the watch() is used to observe value change in state select\r\n  const formData = watch();\r\n\r\n  useEffect(() => {\r\n    const newImageUrls: string[] = [];\r\n    images.forEach(image => newImageUrls.push(URL.createObjectURL(image)));\r\n    setImageURLs(newImageUrls);\r\n  }, [images]);\r\n\r\n  function onImageChange(e: { target: { files: any } }) {\r\n    setImages([...e.target.files]);\r\n  }\r\n\r\n  const uri =\r\n    formData.foundPersonType === \"Found Missing Person\"\r\n      ? ADDFOUNDPERSON_ROUTE\r\n      : ADDDEADPERSON_ROUTE;\r\n\r\n  const { mutate, isLoading } = useMutation(postRequest, {\r\n    onSuccess(res) {\r\n      toast.success(res?.message, toastOptions);\r\n    },\r\n    onError(err: any) {\r\n      toast.error(err?.message, toastOptions);\r\n    },\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<FasProp> = data => {\r\n    console.log(data);\r\n    const imgData = new FormData();\r\n    if (images.length > 3) {\r\n      toast.error(\"You selected more than three images\", toastOptions);\r\n      return;\r\n    }\r\n    if (images.length < 1) {\r\n      toast.error(\"You need to select 1 - 3 images\", toastOptions);\r\n      return;\r\n    }\r\n    Array.from(images).forEach(item => {\r\n      imgData.append(\"products\", item);\r\n    });\r\n    mutate({ data: data, url: uri });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <FoundWrapper>\r\n      <div className=\"head\">\r\n        <h1> Please Add Found Person Details</h1>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <AddFormPage\r\n          formType={formType}\r\n          formData={formData}\r\n          register={register}\r\n          setValue={setValue}\r\n          isLoading={isLoading}\r\n          onOpen={onOpen}\r\n          onImageChange={onImageChange}\r\n          ImageURLs={ImageURLs}\r\n        />\r\n      </form>\r\n    </FoundWrapper>\r\n  );\r\n}\r\n\r\nexport default AddFoundPage;\r\n","// ../../react-shim.js\nimport React from \"react\";\n\n// src/select.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2,\n  layoutPropNames,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction split(object, keys) {\n  const picked = {};\n  const omitted = {};\n  for (const [key, value] of Object.entries(object)) {\n    if (keys.includes(key))\n      picked[key] = value;\n    else\n      omitted[key] = value;\n  }\n  return [picked, omitted];\n}\n\n// src/select.tsx\nimport { cloneElement, isValidElement } from \"react\";\n\n// src/select-field.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nvar SelectField = forwardRef(function SelectField2(props, ref) {\n  const { children, placeholder, className, ...rest } = props;\n  return /* @__PURE__ */ React.createElement(chakra.select, {\n    ...rest,\n    ref,\n    className: cx(\"chakra-select\", className)\n  }, placeholder && /* @__PURE__ */ React.createElement(\"option\", {\n    value: \"\"\n  }, placeholder), children);\n});\nSelectField.displayName = \"SelectField\";\n\n// src/select.tsx\nvar Select = forwardRef2((props, ref) => {\n  const styles = useMultiStyleConfig(\"Select\", props);\n  const {\n    rootProps,\n    placeholder,\n    icon,\n    color,\n    height,\n    h,\n    minH,\n    minHeight,\n    iconColor,\n    iconSize,\n    ...rest\n  } = omitThemingProps(props);\n  const [layoutProps, otherProps] = split(rest, layoutPropNames);\n  const ownProps = useFormControl(otherProps);\n  const rootStyles = {\n    width: \"100%\",\n    height: \"fit-content\",\n    position: \"relative\",\n    color\n  };\n  const fieldStyles = {\n    paddingEnd: \"2rem\",\n    ...styles.field,\n    _focus: {\n      zIndex: \"unset\",\n      ...styles.field[\"_focus\"]\n    }\n  };\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: \"chakra-select__wrapper\",\n    __css: rootStyles,\n    ...layoutProps,\n    ...rootProps\n  }, /* @__PURE__ */ React.createElement(SelectField, {\n    ref,\n    height: h ?? height,\n    minH: minH ?? minHeight,\n    placeholder,\n    ...ownProps,\n    __css: fieldStyles\n  }, props.children), /* @__PURE__ */ React.createElement(SelectIcon, {\n    \"data-disabled\": dataAttr(ownProps.disabled),\n    ...(iconColor || color) && { color: iconColor || color },\n    __css: styles.icon,\n    ...iconSize && { fontSize: iconSize }\n  }, icon));\n});\nSelect.displayName = \"Select\";\nvar DefaultIcon = (props) => /* @__PURE__ */ React.createElement(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  ...props\n}, /* @__PURE__ */ React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}));\nvar IconWrapper = chakra2(\"div\", {\n  baseStyle: {\n    position: \"absolute\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    pointerEvents: \"none\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\nvar SelectIcon = (props) => {\n  const { children = /* @__PURE__ */ React.createElement(DefaultIcon, null), ...rest } = props;\n  const clone = cloneElement(children, {\n    role: \"presentation\",\n    className: \"chakra-select__icon\",\n    focusable: false,\n    \"aria-hidden\": true,\n    style: {\n      width: \"1em\",\n      height: \"1em\",\n      color: \"currentColor\"\n    }\n  });\n  return /* @__PURE__ */ React.createElement(IconWrapper, {\n    ...rest,\n    className: \"chakra-select__icon-wrapper\"\n  }, isValidElement(children) ? clone : null);\n};\nSelectIcon.displayName = \"SelectIcon\";\nexport {\n  DefaultIcon,\n  Select,\n  SelectField\n};\n"],"names":["styled","onOpen","useDisclosure","useForm","register","handleSubmit","watch","reset","setValue","useState","images","setImages","ImageURLs","setImageURLs","formData","useEffect","newImageUrls","forEach","image","push","URL","createObjectURL","uri","foundPersonType","ADDFOUNDPERSON_ROUTE","ADDDEADPERSON_ROUTE","useMutation","postRequest","onSuccess","res","toast","message","toastOptions","onError","err","mutate","isLoading","className","onSubmit","data","console","log","imgData","FormData","length","Array","from","item","append","url","AddForm","formType","onImageChange","e","target","files","cx","classNames","filter","Boolean","join","SelectField","forwardRef","props","ref","children","placeholder","rest","React","chakra","value","displayName","Select","forwardRef2","condition","styles","useMultiStyleConfig","omitThemingProps","rootProps","icon","color","height","h","minH","minHeight","iconColor","iconSize","object","keys","picked","omitted","Object","entries","key","includes","split","layoutPropNames","layoutProps","otherProps","ownProps","useFormControl","rootStyles","width","position","fieldStyles","paddingEnd","field","_focus","zIndex","chakra2","__css","SelectIcon","disabled","fontSize","DefaultIcon","viewBox","fill","d","IconWrapper","baseStyle","display","alignItems","justifyContent","pointerEvents","top","transform","clone","cloneElement","role","focusable","style","isValidElement"],"sourceRoot":""}